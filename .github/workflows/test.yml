name: Test
on:
  push:
    branches:
    - main
    - feature/datasets
    - tz/aip-5368-build-fix
  pull_request:
    branches:
    - main
    - feature/datasets
jobs:
  test:
    name: ${{ matrix.lang }} tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        lang: [Python]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Poetry
      run: |
        pip install --upgrade pip
        pip install poetry coveragepy-lcov

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cached-poetry-dependencies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/test.yml') }}
#        restore-keys: |
#          poetry-${{ hashFiles('**/poetry.lock') }}

#    - name: Set Poetry config
#      run: |
#        poetry config virtualenvs.in-project false
#        poetry config virtualenvs.path ~/.virtualenvs

    - name: Install Dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install -E dask -E spark
        poetry run pip install --upgrade git+https://github.com/zillow/metaflow.git@feature/kfp

    - name: Code Quality Check
      run: |
        poetry run black datasets --check
        poetry run flake8 datasets

    - name: Execute Python tests
      run: |
        poetry run pytest datasets
        coveragepy-lcov

    - name: Publish to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov.info

    - name: Poetry Build
      run: |
        poetry build

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
        skip_existing: true

    - name: Publish distribution to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}